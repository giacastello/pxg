@ ./audio-clock audio:custom {
  #%graph.x 0
  #%graph.y 0
  .code "

    @P(1)
    @Type.Number(min = 10, max = 300, def = 120)
    @Port(false)
    @OnChange(\"updatePulse\")
    double bpm;
    @P(2)
    @Type.Integer(min=1,max=16,def=4)
    @OnChange(\"updatePulse\")
    int subdivision;
    @P(3)
    @ReadOnly
    double actualBpm;
    @P(4)
    @ReadOnly
    double period;
    @P(5)
    @ReadOnly
    int bufferCount;
    
    @Out(1) Output out;
    
    @Inject int position; 

    @Override
    public void setup() \{
        updatePulse();
    \}

    @Override
    public void update() \{
        position++;
        if (position > bufferCount) \{
            position = 0;
            out.send();
        \}
    \}
    
    void updatePulse() \{
        double secPerPulse = 1 / ((bpm * subdivision) / 60);
        double bufPerPulse = secPerPulse / (blockSize / sampleRate);
        bufferCount = (int) (bufPerPulse + 0.5);
        period = bufferCount * (blockSize / sampleRate);
        actualBpm = 60 / subdivision * (1 / period);
    \}
"
}

